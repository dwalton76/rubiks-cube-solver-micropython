
- Implement a X-phase solver OPTION 0
    combine phases of the 9-phase solver into a 5-phase solver

    - phase 1 does DF DR edges, phase 2 FR edge and DFR corner
        - 24x22x20 x 24 is 253,440
        - gives us a 2x2 block in the FRD corner
        - this would average 6 moves which would be about a 4 move savings

    - phase 3 does DB edge, phase 4 does RB edge and DRB corner, phase 5 DL edge
        - 18x16x14 x 21 is 84,672
        - 253440/(253440*84672) is 0.000 011
        - use IDA* to build this table

    - phase 6 does BL edge and DBL corner
    - phase 7 does LF edge and DLF corner
        - 12x10 x 18x15 is 32,400
        - not sure how to build this table

    - combine phases 8+9 of current solver by running all 124,416 states
      through the kociemba solver. I think this would save 2 or 3 moves
      so we would get this from ~21 down ~18.
      Run these through an optimal solver?


- Implement a X-phase solver OPTION 1

    phase 1 white cross
    - 24x22x20x18 = 190,080

    phase 2 white corners
    - 24x21x18x15 = 136,080
    - one prune table of white cross
    - one prune table of white corners
    - IDA* all 136,080 scenarios
        136080 * 190080 = 25,866,086,400
        190080/(136080 * 190080) = 0.000 007

    phase 3 second layer
    - 16x14x12x10 = 26,880
    - one prune table of white cross
    - one prune table of white corners
    - one prune table of second layer
    - IDA* all 26,880 scenarios
        136080 * 190080 * 26880 = 695,280,402,432,000
        190080/(136080 * 190080 * 26880) = 0.000 000 000 273
        This is not feasible
        Maybe someone has already done this?
        Could use the kociemba solver here but it would not be optimal.
        What if you built the table but pruned off any branch that moved
            a white edge to the third layer? Basically eliminate L2 F2 R2 B2.
            The white cross prune table would be 26,880 at that point (instead of 190,080).
            I think this would also reduce the white corners table. You could
            try to build this just to see how much it explodes.

    phase 4 last layer
    - 12x9x6x8x6x4 = 124,416
    - an option here is to use the kociemba solver to build this table
    - this is the equivalent of phases 8+9 in today's 9-phase solver
      We spend ~21 steps in phase8+9 today, combining them would
      get this down to ~18 I think.


- Implement a X-phase solver OPTION 2
    This is going to average 29 moves....nice!!

    phase 1 - EO the edges and corners
        - make the edges and corners solveable without L L' R R'
        - (2^12)/2 or 2048 states
        - (2^8)/2 or 128 states
        - 2048 * 128 is 262,144 states
        - averages 6.37 moves

    phase 2 - Remove F F' B B'
        - LB LF RB RF edges must be staged to x-plane
            12!/(8!*4!) is 495
        - EO the corners again
            - (2^8)/2 or 128 states
        - 128 * 495 is 63,360
        - averages 6.42 moves

    phase 3 - Remove U U' D D'
        move 4 edges to y-plane, this in turn moves the other 4-edges to z-plane
        There must also be some corner manipulation done here
        - 8!/(4!*4!) is 70 for the edges
        - 8!/(4!*4!) is 70 for the corners (I think)
        - 70 * 70 is 4900
        - averages 6.70 moves

    phase 5 - solve cube
        - all quarter turns have been removed by this point
        - (4!^3)/2 is 6912 for the edges
        - 4!^2 is 576 for the corners
            it is actually 96 though (I got 96 by building the corners table)
            576/6 is 96 not sure if that means anything

        - 6912 * 96 is 663,552
        - averages 10.13 moves

        This is 64M right now, I "might" be able to get this small enough to fit on SPIKE
        Build just the edges table or just the corners table to figure out where your math is off.
